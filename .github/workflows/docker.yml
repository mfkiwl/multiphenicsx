name: Generate, test and publish docker image

on:
  workflow_dispatch:
    inputs:
      repository:
        description: "Repository to test"
      library:
        description: "Import name of the library"
      image_name:
        description: "Name of the image to be released"
  workflow_call:
    inputs:
      repository:
        description: "Repository to test"
        type: string
      library:
        description: "Import name of the library"
        type: string
      image_name:
        description: "Name of the image to be released"
        type: string
    secrets:
      CI_REGISTRY_USER:
        description: "Username of the docker registry"
      CI_REGISTRY_PASSWORD:
        description: "Username of the docker registry"

jobs:
  docker:
    if: github.repository == (github.event.inputs || inputs).repository && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      RELEASE_IMAGE: ${{ (github.event.inputs || inputs).image_name }}
      LIBRARY: ${{ (github.event.inputs || inputs).library }}
    steps:
      - uses: actions/checkout@v2
      - name: Build the docker release image
        run: docker build --pull --target ${LIBRARY} -t ${RELEASE_IMAGE}:latest -f docker/Dockerfile .
      - name: Try importing the library inside the docker release image
        run: docker run -i --rm ${RELEASE_IMAGE}:latest python3 -c "import ${LIBRARY}.cpp"
      - name: Run unit tests (serial) to verify that the docker release image is working
        run: docker run -i --rm ${RELEASE_IMAGE}:latest bash -c "cd ${LIBRARY} && pytest tests/unit"
      - name: Build the docker jupyter image
        run: docker build --pull --target jupyter -t ${RELEASE_IMAGE}:jupyter -f docker/Dockerfile .
      - name: Try importing the library inside the docker jupyter image
        run: docker run -i --rm --entrypoint /usr/bin/env ${RELEASE_IMAGE}:jupyter python3 -c "import ${LIBRARY}.cpp"
      - name: Run tutorials (serial) to verify that the docker jupyter image is working
        run: docker run -i --rm --entrypoint /usr/bin/env ${RELEASE_IMAGE}:jupyter bash -c "cd ${LIBRARY} && pytest tutorials"
      - name: Log into the docker registry
        run: docker login -u ${{ secrets.CI_REGISTRY_USER }} -p ${{ secrets.CI_REGISTRY_PASSWORD }}
      - name: Push to the docker registry
        run: |
          docker push ${RELEASE_IMAGE}:latest
          docker push ${RELEASE_IMAGE}:jupyter
